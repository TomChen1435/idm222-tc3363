* {box-sizing: border-box;}

/* 
    Screen-size variables for building media queries

    iPhone SE 1 Portrait = 320 x 568;
    iPad mini 6 Portrait = 744 x 1133;
    iPad mini 5 Landscape = 1024 x 768;

    320px <= screen-width-small < 744px;

    744px <= screen-width-medium < 1024px;

    1024px <= screen-width-large < 1440px;

    1440px <= screen-width-extra-large;
    When the screen is wider than 1440p, there is no need to expand the content anymore.

    Add later:
    Variables cannot be used in media queries, which makes me pivot with a different design approach. I will not choose breakpoints based on devices but create different sets of breakpoints for each section of the page.
*/

:root {
    --screen-small-min: 320px;
    --screen-small-max: 743px;
    --screen-medium-min: 744px;
    --screen-medium-max: 1023px;
    --screen-large-min: 1024px;
    --screen-large-max: 1439px;
    --screen-xl: 1440px;
}

/* 
    Discrete buttons have a border radius of 12px.
    Level-2 sections have a broder radius of 24px.

    Small buttons have a height of 40px.
    Large buttons have a height of 52px.
*/

:root {
    --radius-small: 0.75rem;
    --radius-large: 1.5rem;
    --btn-height-small: 2.5rem;
    --btn-height-large: 3.25rem;
}

/* All animations will be ease-in-out and have a duration of 90ms. */

* {
    transition-duration: 90ms;
    transition-timing-function: ease-in-out;
}

/* Typography */

/* Headings use Montserrat */

@font-face {
    font-family: 'Montserrat';
    src: url('../media/fonts/Montserrat/Montserrat-VariableFont_wght.ttf') format('truetype');
}

/* 
    Others use Helvetica Neue
    I cannot afford the license for this font. Apple Macintosh computers come with the font pre-installed. Others can use Arial and other sans-serif fonts in the fallback list.
*/

:root {
    --fontHeadings: 'Montserrat', sans-serif;
    --fontRegular: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

/* All elements with a class name of 'hide' do not display. */

.hide {display: none !important;}

/* The background color is the lightest tint of gray in light mode and the darkest shade of gray in dark mode. */

body, main {
    background-color: var(--extremeGray0);
    margin: 0;
}

main, section.main, section.menu-card-collection {
    display: flex;
    flex-flow: column nowrap;
    width: 100%;
}

@media (max-width: 639px) {
    main {
        gap: 1.5rem;
        padding: 1rem;
    }

    section.main, section.menu-card-collection {
        gap: 1rem;
    }
}

@media (min-width: 640px) {
    main {
        gap: 2rem;
        padding: 2rem 5%;
    }
    
    section.main, section.menu-card-collection {
        gap: 1.5rem;
    }
}

/* 
    Font Weights

    100 = Thin/Hairline; 
    200 = Extra Light/Ultra Light; 
    300 = Light; 
    400 = Normal/Regular; 
    500 = Medium; 
    600 = Semi Bold/Demi Bold; 
    700 = Bold; 
    800 = Extra Bold/Ultra Bold; 
    900 = Black/Heavy; 
    950 = Extra Black/Ultra Black; 
*/

a, p, li, dt {
    font-family: var(--fontRegular);
    font-size: 1rem;
    font-weight: 400;
    line-height: 145%;
    margin: 0;
    text-wrap: pretty;
}

p, li, dt, h1 {
    color: var(--textColorRegular);
}

ul, ol, dl {
    margin: 0;
}

h1, section.main > p {
    padding: 0 2.25rem;
}

h1 {
    font-family: var(--fontHeadings);
    font-size: 2rem;
    font-weight: 600;
    margin: 0;
}

/* Colors to use for the website */

/* For general contents, I am using black/white texts on light/dark gray backgrounds. */

@media (prefers-color-scheme: light) {
    :root {
        --textColorRegular: black;
        --backgroundFocus: white;
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --textColorRegular: white;
        --backgroundFocus: black;
    }
}

/* For the tints and shades of gray, I am using the colors from the Apple developer documents. */

@media (prefers-color-scheme: light) {
    :root {
        --macosSystemGray: rgb(142,142,147);
        --iosSystemGray2: rgb(174,174,178);
        --iosSystemGray5: rgb(229,229,234);
        --iosSystemGray6: rgb(242,242,247);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --macosSystemGray: rgb(152,152,157);
        --iosSystemGray2: rgb(99,99,102);
        --iosSystemGray5: rgb(44,44,46);
        --iosSystemGray6: rgb(28,28,30);
    }
}

:root {
    --moderateGray0: var(--iosSystemGray2);
    --moderateGray1: var(--macosSystemGray);
    --extremeGray0: var(--iosSystemGray6);
    --extremeGray1: var(--iosSystemGray5);
}

/* For brand-related colors, I am using the green and magenta colors from IBM Design Language. */

:root {
    --ibmGreen30: #6fdc8c;
    --ibmMagenta30: #ffafd2;
    --ibmGreen40: #42be65;
    --ibmMagenta40: #ff7eb6;
    --ibmGreen50: #24a148;
    --ibmMagenta50: #ee5396;
    --ibmGreen60: #198038;
    --ibmMagenta60: #d02670;
    --ibmGreen70: #0e6027;
    --ibmMagenta70: #9f1853;
}

/* Background color for the elements that have to have green elements over green background. */

:root {
    --greenStandard: var(--ibmGreen50);
    --magentaStandard: var(--ibmMagenta50);
}

/* For the light mode, I am using the designs of white texts on darker green backgrounds. */

@media (prefers-color-scheme: light) {
    :root {
        --green0: var(--ibmGreen60);
        --magenta0: var(--ibmMagenta60);
        --green1: var(--ibmGreen70);
        --magenta1: var(--ibmMagenta70);
        --textOnColor: white;
    }
}

/* For the dark mode, I am using the designs of black texts on brighter green backgrounds. */

@media (prefers-color-scheme: dark) {
    :root {
        --green0: var(--ibmGreen40);
        --magenta0: var(--ibmMagenta40);
        --green1: var(--ibmGreen30);
        --magenta1: var(--ibmMagenta30);
        --textOnColor: black;
    }
}

/* I am also using other colors from the Apple developer documents for better clarity and element displays. */

@media (prefers-color-scheme: light) {
    :root {
        --orange: rgb(255,149,0);
        --yellow: rgb(255,204,0);
        --blue: rgb(0,122,255);
        --indigo: rgb(88,86,214);
        --purple: rgb(175,82,222);
        --pink: rgb(255,45,85);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --orange: rgb(255,159,10);
        --yellow: rgb(255,214,10);
        --blue: rgb(10,132,255);
        --indigo: rgb(94,92,230);
        --purple: rgb(191,90,242);
        --pink: rgb(255,55,95);
    }
}

/* Categorize the colors for different purposes. */

/* Alerts and highlights use either black texts on yellow backgrounds or white texts on orange backgrounds. */

:root {
    --alertBackground0: var(--yellow);
    --alertBackground1: var(--orange);
    --alertTextColor0: black;
    --alertTextColor1: white;
}

/* Different states of hyperlinks will be displayed by different text colors. */

a.hyperlink:link {color: var(--blue);}
a.hyperlink:hover {color: var(--indigo);}
a.hyperlink:active {color: var(--pink);}
a.hyperlink:visited {color: var(--purple);}

/* Alert header */

header#alert {
    align-items: center;
    background-color: var(--alertBackground0);
    display: flex;
    flex-flow: column nowrap;
    height: auto;
    width: 100%;
}

header#alert p {
    color: var(--alertTextColor0);
    padding: 0;
    text-align: center;
}

/* When screen width is between 320px and 480px */

@media (max-width: 479px) {
    header#alert {
        gap: 0.25rem;
        padding: 0.75rem;
    }
    
    header#alert p {
        font-size: 1rem;
    }
}

/* Gaps and paddings remain the same for larger screens */

@media (min-width: 480px) {
    header#alert {
        gap: 0.5rem;
        padding: 1rem;
    }
}

/* When screen width is between 480px and 1024px */

@media (min-width: 480px) and (max-width: 1023px) {
    header#alert p {
        font-size: 1.25rem;
    }    
}

/* When screen width is between 1024px and 1440px */

@media (min-width: 1024px) and (max-width: 1439px) {
    header#alert p {
        font-size: 1.5rem;
    }    
}

/* When screen width is above 1440px */

@media (min-width: 1440px) {
    header#alert p {
        font-size: 1.75rem;
    }    
}

/* Breathing animation to catch users' attention */

/* The codes of animation for different levels of elements are written separately, but as the rhythm is the same, I am writing them as local variables. */

header#alert {
    --aDuration: 1s;
    --aDelay: 250ms;
}

header#alert {
    animation: breathe-background var(--aDuration) ease-in-out var(--aDelay) 4 alternate;
}

@keyframes breathe-background {
    0% {
        background-color: var(--alertBackground0);
    }
    67% {
        background-color: var(--alertBackground1);
    }
    100% {
        background-color: var(--alertBackground1);
    }
}

header#alert p, header#alert p span {
    animation: breathe-text var(--aDuration) ease-in-out var(--aDelay) 4 alternate;
}

@keyframes breathe-text {
    0% {
        color: var(--alertTextColor0);
    }
    67% {
        color: var(--alertTextColor1);
    }
    100% {
        color: var(--alertTextColor1);
    }
}

/* Header */

header#header {
    background-color: var(--green0);
    display: flex;
    flex-wrap: nowrap;
    margin: 0;
    padding: 1rem;
}

a#logo {
    align-self: flex-start;
    color: var(--textOnColor);
    font-family: var(--fontHeadings);
    font-weight: 600;
    text-decoration: none;
}

section.page-btns {
    background-color: var(--greenStandard);
    border-radius: calc(var(--radius-small) + 1rem);
    gap: 1rem;
    padding: 1rem;
}

button.icon {
    align-items: center;
    background-color: var(--green0);
    border: none;
    border-radius: var(--radius-small);
    display: flex;
    height: var(--btn-height-small);
    justify-content: center;
    transition-property: background-color;
}

button.icon svg {
    fill: var(--textOnColor);
    height: calc(var(--btn-height-small) - 0.5rem);
    transition-property: color;
    width: auto;
}

/* When hovering, the buttons have a different background color. */

button.icon:hover {
    background-color: var(--green1);
}

/* When pressing/clicking, the texts and backgrounds change color with each other. */

button.icon:active {
    background-color: var(--textOnColor);
}

button.icon:active svg {
    color: var(--green1);
}

/* When screen width is less that 580px, the logo and the buttons split into different rows. */

@media (max-width: 579px) {
    header#header {
        flex-direction: column;
        gap: 0.75rem;
    }

    a#logo {
        justify-self: flex-start;
    }

    /* The buttons both strech to take up all horizontal space. */

    section.page-btns {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: 1fr;
        grid-template-areas: 'cart account';
    }

    button#cart-btn-header {grid-area: cart;}
    button#account-btn-header {grid-area: account;}

    button.icon {
        width: 100%;
    }
}

/* When screen width is greater than 580px, the logo and the buttons share the horizontal space with space in between. */

@media (min-width: 580px) {
    header#header {
        align-items: center;
        flex-direction: row;
        justify-content: space-between;
    }

    a#logo {
        align-self: center;
    }

    section.page-btns {
        align-self: flex-end;
        display: flex;
        flex-flow: row nowrap;
        justify-self: flex-end;
    }

    button.icon {
        width: var(--btn-height-small);
    }
}

/* When screen width is greater than 640px, paddings on the sides grow with the screen width. */

@media (min-width: 640px) {
    header#header {
        padding: 1rem 5%;
    }
}

/* When screen width is less than 750px, the logo has a font size of 32px. */

@media (max-width: 749px) {
    a#logo {
        font-size: 2rem;
    }
}

/* When screen width is greater than 750px, the logo has a font size of 36px. */

@media (min-width: 750px) {
    a#logo {
        font-size: 2.25rem;
    }
}

/* Navigation */

nav {
    align-items: center;
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
}

nav button, nav a.btn {
    align-content: center;
    border: none;
    color: var(--textOnColor);
    font-family: var(--fontRegular);
    font-weight: 500;
    justify-content: center;
    text-decoration: none;
    text-align: center;
    transition-property: background-color, color;
}

/* When hovering, the buttons have a different background color. */

nav button:hover, nav a.btn:hover {
    background-color: var(--green1);
}

/* When pressing/clicking, the texts and backgrounds change color with each other. */

nav button:active, nav a.btn:active {
    background-color: var(--textOnColor);
    color: var(--green1);
}

/* When the screen width is between 320px and 540px, buttons are discrete for more intuitive operation. */

@media (max-width: 539px) {
    nav {
        background-color: var(--greenStandard);
        gap: 1rem;
        padding: 1rem;
    }
    nav button, nav a.btn {
        background-color: var(--green0);
        border-radius: var(--radius-small);
        font-size: 1.25rem;
        height: var(--btn-height-small);
        width: 100%;
    }
}

/* When the screen width is between 320px and 360px, buttons are displayed in a column. */

@media (max-width: 359px) {
    nav {
        flex-direction: column;
    }
}

/* 
    When the screen width is between 360px and 540px, displaying the buttons in a column is space-wasting. Instead, buttons are splitted into two rows, with "Menu" and "Catering" in the first row, while the others share the second. 

    This portion will override the more general rule of creating a flexbox. 
*/

@media (min-width: 360px) and (max-width: 539px) {
    nav {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(2, 1fr);
        grid-template-areas: 
        'menu menu catering'
        'delivery faqs about';
    }

    button#menu-btn-nav {grid-area: menu;}
    a#catering-btn-nav {grid-area: catering;}
    button#delivery-btn-nav {grid-area: delivery;}
    button#faq-btn-nav {grid-area: faqs;}
    button#about-btn-nav {grid-area: about;}
}

/* When the screen width is greater than 540px, buttons lose their discrete shape and display in a row to save space for the contents. */

@media (min-width: 540px) {
    nav {
        background-color: var(--green0);
        flex-direction: row;
    }

    nav button, nav a.btn {
        background: none;
        border-radius: 0;
    }
}

/* When the screen width is between 540px and 720px, the buttons have a smaller height to keep consistency with the previous designs. */

@media (min-width: 540px) and (max-width: 719px) {
    nav button, nav a.btn {
        font-size: 1.25rem;
        height: var(--btn-height-small);
        padding: 0 1rem;
    }
}

/* When the screen width is greater than 720px, buttons get larger to make more use of the larger screen. */

@media (min-width: 720px) {
    nav {
        gap: 1rem;
    }

    nav button, nav a.btn {
        font-size: 1.5rem;
        height: var(--btn-height-large);
        padding: 0 1.25rem;
    }
}

/* Footer */

footer {
    background-color: var(--green0);
    display: flex;
    flex-wrap: nowrap;
}

p.copyright-info {
    color: var(--textOnColor);
}

section.payment-method-icons {
    display: flex;
    flex-direction: row;
}

picture.icon, picture.icon source, picture.icon img {
    margin: 0;
    padding: 0;
    width: auto;
}

/* When screen width is less than 1024px, all contents should be centered and split into two rows. */

@media (max-width: 1023px) {
    footer {
        align-items: center;
        flex-direction: column;
        gap: 0.75rem;
        justify-content: center;
        padding: 1rem;
    }
    
    p.copyright-info {
        text-align: center;
    }
}

/* When screen width is less than 640px, the icons are more compact to save space. */

@media (max-width: 639px) {
    section.payment-method-icons {
        flex-wrap: wrap;
        gap: 0.75rem;
        justify-content: center;
        width: 100%;
    }
    
    picture.icon, picture.icon source, picture.icon img {
        height: 1rem;
    }
}

/* When screen width is greater than 540px, increase the font size. */

@media (min-width: 540px) {
    p.copyright-info {
        font-size: 1.125rem;
    }
}

/* When screen width is greater than 640px, the icons expand and take more space. */

@media (min-width: 640px) {
    section.payment-method-icons {
        flex-wrap: nowrap;
        gap: 1rem;
        justify-self: flex-end;
    }
    
    picture.icon, picture.icon source, picture.icon img {
        height: 1.25rem;
    }
}

/* When screen width is greater than 1024px, all contents can fit into the same row to take advantage of the extra horizontal space. */

@media (min-width: 1024px) {
    footer {
        align-items: center;
        flex-direction: row;
        justify-content: space-between;
    }
    
    p.copyright-info {
        justify-self: flex-start;
        text-align: left;
    }
}

@media (min-width: 1024px) and (max-width: 1199px) {
    footer {
        padding: 1rem;
    }
}

/* When screen width is greater than 1200px, add more paddings to the left and right of the contents. */

@media (min-width: 1200px) {
    footer {
        padding: 1rem 5%;
    }
}

/* Information card designs */

section.card, section.menu-card {
    background: none;
    border: 0.25rem solid var(--moderateGray0);
    border-radius: var(--radius-large);
    transition-property: background-color, border-color;
    width: 100%;
}

section.card:hover, section.menu-card:hover {
    background-color: var(--backgroundFocus);
    border-color: var(--moderateGray1);
}

section.card h2 {
    background-color: var(--green0);
    --radius-large-minus: calc(var(--radius-large) - 0.25rem);
    border-radius: var(--radius-large-minus) var(--radius-large-minus) 0 0;
    color: var(--textOnColor);
    font-family: var(--fontRegular);
    font-weight: 500;
    margin: 0;
    padding: 1.5rem 2rem 0.875rem;
    transition-property: background-color;
    width: 100%;
}

section.card:hover h2 {
    background-color: var(--green1);
}

section.card.highlight h2 {
    background-color: var(--alertBackground0);
    color: var(--alertTextColor0);
    transition-property: background-color, color;
}

section.card.highlight:hover h2 {
    background-color: var(--alertBackground1);
    color: var(--alertTextColor1);
}

section.card hr {
    border: none;
    border-radius: 0.125rem;
    background-color: var(--magenta1);
    height: 0.25rem;
    margin: -0.125rem auto;
    width: calc(100% - 3rem);
}

section.card:hover hr {
    background-color: var(--magenta0);
}

section.card-content, section.menu-card {
    display: flex;
    flex-flow: column nowrap;
    gap: 0.5rem;
    margin: 0.125rem 0 0;
    padding: 1rem 2rem 1.5rem;
}

section.card-content hr {
    align-self: center;
    background-color: var(--moderateGray0);
    margin: 0.5rem 0;
    transition-property: background-color;
    width: 100%;
}

section.card:hover section.card-content hr {
    background-color: var(--moderateGray1);
}

section.owner-info {
    align-self: flex-end;
    margin-top: 0.5rem;
    text-align: center;
}

p.name {
    font-size: 1.375rem;
    font-weight: 500;
}

section.icons {
    display: flex;
    flex-flow: row nowrap;
    gap: 1rem;
}

a.icon, a.icon picture, a.icon picture source, a.icon picture img {
    height: var(--btn-height-small);
    width: var(--btn-height-small);
}

section.input {
    display: flex;
    flex-flow: row wrap;
    gap: 0.75rem;
}

input {
    align-items: flex-start;
    background: none;
    border: 0.25rem solid var(--moderateGray0);
    border-radius: var(--radius-small);
    color: var(--moderateGray0);
    display: flex;
    flex-flow: column nowrap;
    font-family: var(--fontRegular);
    font-size: 1.25rem;
    font-weight: 400;
    height: var(--btn-height-small);
    justify-content: center;
    padding: 0 1.25rem;
}

input:focus {
    background-color: var(--backgroundFocus);
    border-color: var(--magenta1);
    color: var(--textColorRegular);
}

/* Homepage designs */

/* h1 has been mentioned in other stylesheets. */

section.carousel {
    position: relative;
}

section.carousel-content {
    align-items: flex-end;
    bottom: 2.25rem;
    display: flex;
    flex-flow: column nowrap;
    gap: 0.75rem;
    justify-items: flex-end;
    position: absolute;
    right: 2.2rem;
    z-index: 10;
}

section.carousel-content h1 {
    font-size: 1.25rem;
    padding: 0;
    text-align: right;
}

button.normal {
    align-content: center;
    background-color: var(--green0);
    border: none;
    border-radius: var(--radius-small);
    color: var(--textOnColor);
    display: flex;
    flex-flow: column nowrap;
    font-family: var(--fontRegular);
    font-size: 1.25rem;
    font-weight: 500;
    height: var(--btn-height-small);
    justify-content: center;
    padding: 0.25rem 0.75rem;
}

@media (max-width: 389px) {
    section.carousel-content h1 {
        display: none;
    }
}

@media (max-width: 479px) {
    section.carousel-content {
        bottom: 1rem;
        gap: 0.5rem;
        right: 1rem;
    }
}

@media (min-width: 480px) {
    section.carousel-content h1 {
        font-size: 1.5rem;
    }
}

@media (min-width: 720px) {
    section.carousel-content h1 {
        font-size: 1.75rem;
    }
}

@media (min-width: 840px) {
    section.carousel-content h1 {
        font-size: 2rem;
    }
}

button.normal:hover {
    background-color: var(--green1);
}

button.normal:active {
    background-color: var(--textOnColor);
    color: var(--green1);
}

section.carousel picture, section.carousel source, section.carousel img {
    border: none;
    border-radius: var(--radius-large);
    height: auto;
    width: 100%;
}

/* Menu */

/* section.menu-card-collection was mentioned in card-design.css and share the same parameters with main and section.main. */

section.menu-card-collection:nth-child(1) {grid-area: z1;}
section.menu-card-collection:nth-child(2) {grid-area: z2;}
section.menu-card-collection:nth-child(3) {grid-area: z3;}
section.menu-card-collection:nth-child(4) {grid-area: z4;}
section.menu-card-collection:nth-child(5) {grid-area: z5;}
section.menu-card-collection:nth-child(6) {grid-area: z6;}
section.menu-card-collection:nth-child(7) {grid-area: z7;}
section.menu-card-collection:nth-child(8) {grid-area: z8;}
section.menu-card-collection:nth-child(9) {grid-area: z9;}
section.menu-card-collection:nth-child(10) {grid-area: z10;}
section.menu-card-collection:nth-child(11) {grid-area: z11;}
section.menu-card-collection:nth-child(12) {grid-area: z12;}
section.menu-card-collection:nth-child(13) {grid-area: z13;}
section.menu-card-collection:nth-child(14) {grid-area: z14;}
section.menu-card-collection:nth-child(15) {grid-area: z15;}
section.menu-card-collection:nth-child(16) {grid-area: z16;}
section.menu-card-collection:nth-child(17) {grid-area: z17;}
section.menu-card-collection:nth-child(18) {grid-area: z18;}

section.menu-card-collection {
    display: grid;
    justify-items: center;
}

@media (min-width: 470px) {
    section.menu-card-collection {
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(9, 1fr);
        grid-template-areas:
        'z1 z2'
        'z3 z4'
        'z5 z6'
        'z7 z8'
        'z9 z10'
        'z11 z12'
        'z13 z14'
        'z15 z16'
        'z17 z18';
    }
}

@media (min-width: 820px) {
    section.menu-card-collection {
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(6, 1fr);
        grid-template-areas:
        'z1 z2 z3'
        'z4 z5 z6'
        'z7 z8 z9'
        'z10 z11 z12'
        'z13 z14 z15'
        'z16 z17 z18';
    }
}

@media (min-width: 1200px) {
    section.menu-card-collection {
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(5, 1fr);
        grid-template-areas:
        'z1 z2 z3 z4'
        'z5 z6 z7 z8'
        'z9 z10 z11 z12'
        'z13 z14 z15 z16'
        '. z17 z18 .';
    }
}

@media (min-width: 1470px) {
    section.menu-card-collection {
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(4, 1fr);
        grid-template-areas:
        'z1 z2 z3 z4 z5'
        'z6 z7 z8 z9 z10'
        'z11 z12 z13 z14 z15'
        '. z16 z17 z18 .';
    }
}

section.menu-card {
    container-type: inline-size;
    justify-content: space-around;
}

section.menu-card picture, section.menu-card source, section.menu-card img {
    width: 100%;
}

h3 {
    color: var(--textColorRegular);
    font-family: var(--fontRegular);
    font-size: 1.5rem;
    font-weight: 500;
    padding: 0;
    margin: 0;
}

@container (min-width: 450px) {
    section.menu-card h3 {
        font-size: 1.75rem;
    }

    p.price {
        font-size: 1.25rem;
    }
}
