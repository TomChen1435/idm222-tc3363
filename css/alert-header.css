/* Alert header */

header#alert {
    align-items: center;
    background-color: var(--alertBackground0);
    display: flex;
    flex-flow: column nowrap;
    height: auto;
    justify-content: space-between;
    width: 100%;
}

header#alert p {
    color: var(--alertTextColor0);
    font-family: var(--fontRegular);
    font-weight: 400;
    margin: 0;
    padding: 0;
    text-align: center;
}

/* When screen width is between 320px and 480px */

@media (min-width: 320px) and (max-width: 479px) {
    header#alert {
        gap: 0.25rem;
        padding: 0.75rem;
    }
    
    header#alert p {
        font-size: 1rem;
    }
}

/* Gaps and paddings remain the same for larger screens */

@media (min-width: 480px) {
    header#alert {
        gap: 0.5rem;
        padding: 1rem;
    }
}

/* When screen width is between 480px and 1024px */

@media (min-width: 480px) and (max-width: 1023px) {
    header#alert p {
        font-size: 1.25rem;
    }    
}

/* When screen width is between 1024px and 1440px */

@media (min-width: 1024px) and (max-width: 1439px) {
    header#alert p {
        font-size: 1.5rem;
    }    
}

/* When screen width is above 1440px */

@media (min-width: 1440px) {
    header#alert p {
        font-size: 1.75rem;
    }    
}

/* Breathing animation to catch users' attention */

/* The codes of animation for different levels of elements are written separately, but as the rhythm is the same, I am writing them as local variables. */

header#alert {
    --aDuration: 1s;
    --aDelay: 250ms;
}

header#alert {
    animation: breathe-background var(--aDuration) ease-in-out var(--aDelay) 4 alternate;
}

@keyframes breathe-background {
    0% {
        background-color: var(--alertBackground0);
    }
    67% {
        background-color: var(--alertBackground1);
    }
    100% {
        background-color: var(--alertBackground1);
    }
}

header#alert p, header#alert p span {
    animation: breathe-text var(--aDuration) ease-in-out var(--aDelay) 4 alternate;
}

@keyframes breathe-text {
    0% {
        color: var(--alertTextColor0);
    }
    67% {
        color: var(--alertTextColor1);
    }
    100% {
        color: var(--alertTextColor1);
    }
}
